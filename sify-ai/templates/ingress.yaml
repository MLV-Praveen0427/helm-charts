{{- $kubeVersion := .Capabilities.KubeVersion.GitVersion }}

{{- if .Values.frontend.enabled }}
{{- $fullName := printf "%s-frontend" (include "sify-ai.fullname" .) }}
{{- $svcPort := .Values.frontend.service.port }}
{{- $ingress := .Values.frontend.ingress }}

{{- if and $ingress.className (not (semverCompare ">=1.18-0" $kubeVersion)) }}
  {{- if not (hasKey $ingress.annotations "kubernetes.io/ingress.class") }}
    {{- $_ := set $ingress.annotations "kubernetes.io/ingress.class" $ingress.className }}
  {{- end }}
{{- end }}

{{- if semverCompare ">=1.19-0" $kubeVersion }}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" $kubeVersion }}
apiVersion: networking.k8s.io/v1beta1
{{- else }}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "sify-ai.labels" . | nindent 4 }}
    app: frontend
  {{- with $ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and $ingress.className (semverCompare ">=1.18-0" $kubeVersion) }}
  ingressClassName: {{ $ingress.className }}
  {{- end }}
  {{- if $ingress.tls }}
  tls:
    {{- range $ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range $ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $kubeVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $kubeVersion }}
              service:
                name: {{ $fullName }}-service
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}-service
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}

---

{{- if .Values.backend.enabled }}
{{- $fullName := printf "%s-backend" (include "sify-ai.fullname" .) }}
{{- $svcPort := .Values.backend.service.port }}
{{- $ingress := .Values.backend.ingress }}

{{- if and $ingress.className (not (semverCompare ">=1.18-0" $kubeVersion)) }}
  {{- if not (hasKey $ingress.annotations "kubernetes.io/ingress.class") }}
    {{- $_ := set $ingress.annotations "kubernetes.io/ingress.class" $ingress.className }}
  {{- end }}
{{- end }}

{{- if semverCompare ">=1.19-0" $kubeVersion }}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" $kubeVersion }}
apiVersion: networking.k8s.io/v1beta1
{{- else }}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "sify-ai.labels" . | nindent 4 }}
    app: backend
  {{- with $ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and $ingress.className (semverCompare ">=1.18-0" $kubeVersion) }}
  ingressClassName: {{ $ingress.className }}
  {{- end }}
  {{- if $ingress.tls }}
  tls:
    {{- range $ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range $ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $kubeVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $kubeVersion }}
              service:
                name: {{ $fullName }}-service
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}-service
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}

